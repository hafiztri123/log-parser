name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21', '1.22', '1.23' ] # Using quotes is a good practice
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Check coverage threshold
        run: |
          # Use 'go tool cover' to get the total percentage
          coverage=$(go tool cover -func=coverage.out | grep total: | awk '{print $3}' | sed 's/%//')
          echo "Current coverage: $coverage%"
          # Use 'bc' to compare floating point numbers and check the result with standard shell test
          if [ $(echo "$coverage <70" | bc) -eq 1 ]; then
            echo "❌ Coverage $coverage% is below 80% threshold"
            exit 1
          else
            echo "✅ Coverage $coverage% meets threshold"
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  build:
    name: Build
    # This job should only run if test and lint jobs succeed
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Build to check for compile errors
        run: go build -v ./...

      - name: Build for multiple platforms
        run: |
          GOOS=linux GOARCH=amd64 go build -o build/log-pipeline-linux-amd64 ./cmd/...
          GOOS=windows GOARCH=amd64 go build -o build/log-pipeline-windows-amd64.exe ./cmd/...
          GOOS=darwin GOARCH=amd64 go build -o build/log-pipeline-darwin-amd64 ./cmd/...
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: build/